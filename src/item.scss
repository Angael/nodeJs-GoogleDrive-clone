@import "variables";

/* Folder&File items */
// Mixin, because i clone html inside itemDetails
// And there can't be 2 of the same id inside
@mixin itemDetailsStyling() {
  .itemDetails_content {
    //padding: $padding-medium;
  }
  .itemDetails_buttons button {
    display: block;
    margin: auto;
    margin-bottom: 0.5rem;
  }
  img.itemDetails_preview {
    width: 100%;
    transform: scale(0.8);
  }
  h5 {
    word-break: break-all;
    text-align: center;
  }
}
#itemsRoute {
  display: grid;
  grid-template-columns: 1fr 300px;
  transition: 0.3s;
  @media only screen and (max-width: $mobileMediaBreak) {
    display: block;
    #itemDetails {
      display: none;
    }
  }
  #itemDetails {
    box-shadow: 3px 0px 4px -3px black inset;
    background: white;
    // 100px is for materialize nav menu that is extended
    height: calc(100vh - 100px);
    @include itemDetailsStyling();
    .itemDetails_content {
      padding: $padding-medium;
    }
  }
}
#modalItemDetails {
  max-height: 90%;
  @include itemDetailsStyling();
  .modal-content {
    padding: 0;
  }
}

#itemListWrapper {
  position: relative;
  //relative because this allows for fixed materialize button inside it
  .fixed-action-btn {
    position: absolute;
  }
}
#itemList {
  position: relative;
  overflow: auto;
  // 100px is height of materialize navbar with extended part
  height: calc(100vh - 100px);

  &::-webkit-scrollbar {
    width: 10px;
  }
  &::-webkit-scrollbar-track {
    background: #f1f1f1;
  }
  &::-webkit-scrollbar-thumb {
    background: #888;
  }
  &::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
}
#itemList .itemContainer {
  position: relative;
  border: solid 1px rgb(117, 117, 117);
  background: rgb(252, 252, 252);
}
// View Comfy is default one
#itemList[data-display-type="view_comfy"] {
  display: grid;
  grid-template-columns: repeat(auto-fill, #{$vcItemWidth});
  grid-gap: $vcGridGap;
  align-content: flex-start;
  justify-content: center;
  // The 3rem on bottom is to prevent
  // Materialize from fucking up my rem's
  padding: $padding-medium 0 6rem 0;

  @media only screen and (max-width: $mobileMediaBreak) {
    & {
      grid-template-columns: 50% 50%;
      padding: $vcGridGap;
    }
  }
  .itemContainer {
    width: 100%;
    height: $vcItemHeight;
    padding: 0;
    margin: auto;
    overflow: hidden;
    box-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.171);
    transition: 0.15s;
    cursor: pointer;
    user-select: none;
    &:hover {
      transform: scale(1.01);
      box-shadow: 2px 2px 7px 2px rgba(0, 0, 0, 0.26);
    }
    .itemIcon {
      display: block;
      overflow: hidden;
      transition: 0.2s;

      .Item_previewImg {
        object-fit: cover;
        width: 100%;
        height: calc(100% + 0.5rem);
      }

      .Item_svgIcon {
        height: 75%;
        display: block;
        margin: auto;
        transform: scale(0.8);
      }
    }
    // &:hover .itemIcon {
    //   transform: scale(1) translateY(-0.5rem);
    // }

    $itemInfoHeight: 2rem;
    .itemInfo {
      position: absolute;
      bottom: 0;
      height: $itemInfoHeight;
      border-top: #d9d9d9 1px solid;
      width: 100%;
      transition: 0.2s;
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);

      .itemInfo_name {
        height: $itemInfoHeight;
        line-height: 1rem;
        padding: 0.5rem 4px;
        white-space: nowrap;
        overflow: hidden !important;
        text-overflow: ellipsis;
        width: calc(100% - 2rem);
        float: left;
        display: inline-block;
      }
      .itemInfo_button {
        display: none;

        float: right;
        line-height: $itemInfoHeight;
        height: $itemInfoHeight;
        @media only screen and (max-width: $mobileMediaBreak) {
          display: block;
        }
      }
      overflow: hidden;
      background: rgba(255, 255, 255, 0.95);
    }
    // &:hover .itemInfo {
    //   height: #{2 * $itemInfoHeight};
    // }
    // @media only screen and (max-width: $mobileMediaBreak) {
    // & {
    //   width: calc(var(--rowWidthPhone) - 10px);
    //   margin: 5px 5px;
    // }
  }
  .itemContainer.selected {
    box-shadow: 0px 0px 2px 4px rgb(0, 187, 255);
    transform: scale(0.85);
    .itemInfo {
      background: rgba(0, 166, 255, 0.95);
      color: white;
    }
  }
  .itemContainer.item-placeholder {
    cursor: progress;
    border: none;
    box-shadow: none;
    background: transparent;
    .img-placeholder {
      display: block;
      overflow: hidden;
      width: 100%;
      height: calc(100% + 0.5rem);
      background: grey;
      background: linear-gradient(270deg, #888888, #606060, #888888);
      background-size: 600% 600%;

      -webkit-animation: placeholderGradient 1.5s linear infinite;
      -moz-animation: placeholderGradient 1.5s linear infinite;
      animation: placeholderGradient 1.5s linear infinite;
    }
    .itemInfo_name {
      height: 1rem;
      margin: 0.5rem 4px;
      background: grey;
      background: linear-gradient(270deg, #888888, #606060, #888888);
      background-size: 600% 600%;

      -webkit-animation: placeholderGradient 1.5s linear infinite;
      -moz-animation: placeholderGradient 1.5s linear infinite;
      animation: placeholderGradient 1.5s linear infinite;
    }
    //https://www.gradient-animator.com/
    @-webkit-keyframes placeholderGradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 51%;
      }
      100% {
        background-position: 0% 50%;
      }
    }
    @-moz-keyframes placeholderGradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 51%;
      }
      100% {
        background-position: 0% 50%;
      }
    }
    @keyframes placeholderGradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 51%;
      }
      100% {
        background-position: 0% 50%;
      }
    }
  }
}
#itemList[data-display-type="bigTile"] .itemContainer {
  height: 20rem;
}
// add important?
.itemContainer:hover {
  border: solid 1px rgb(105, 105, 105);
  background: rgb(255, 255, 255);
  box-shadow: 2px 2px 5px 2px rgba(0, 0, 0, 0.27);
}
.itemImgPreview {
  position: absolute;
  bottom: 5rem;
  left: 0;
  width: 100%;
  height: calc(15rem);
  padding: 1rem;
  background: rgb(235, 235, 235);
  z-index: 1;
  overflow: hidden;
  box-shadow: inset 0px -18px 29px -22px rgba(0, 0, 0, 0.45);
  img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  i {
    font-size: 14rem;
    top: 50%;
    position: absolute;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #333;
  }
}
.itemView {
  display: grid;
  position: absolute;
  bottom: 0;
  left: 0;
  grid-template-columns: 1fr 3fr;
  align-content: center;
  justify-content: center;
  margin: 1rem;
  width: calc(100% - 2rem);
  height: calc(5rem - 2rem);
  transition: 0.2s;
}
.inMenu .itemView {
  bottom: 5rem;
  opacity: 0;
}
.itemName {
  height: 100%;
  float: left;
  word-break: break-all;
  transition: 0.2s;
}

.visibleWhenSelection {
  position: absolute;
  bottom: 26px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1;
}
